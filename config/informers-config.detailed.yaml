# define channels
channels:
  callback-demo: # channel name
    type: callback # channel type
    callback: # configuration for type: callback
      url: "http://localhost:8984/api/v1/callback-channel-test" # send notification to this url
  group-demo:
    type: group
    group: # configuration for type: group
    - print
  print-to-stdout:
    type: print
    print: # configuration for type: print
      writer: stdout
  telegram-demo:
    type: telegram
    telegram: # configuration for type: telegram
      token: "xxx"

# defines resources to watch
namespaces:
- namespace: "demo" # namespace in kubernetes, "" means all namespaces
  resources: # defines resources in this namespace
  - resource: "configmaps" # resource name in kubernetes
    noticeWhenAdded: true # record event when resource added
    noticeWhenDeleted: true # record event when resource deleted
    noticeWhenUpdated: true # record event when resource updated
    updateOn: # specify fields to watch modification
    - ".data"
    channelNames: # channel names only for this resource, optional
    - print-to-stdout
    resyncPeriod: 12h # resync period only for this resource, optional
    workers: 3 # workers only for this resource, optional
  # default channels names for resources in this namespace,
  # this value can be override by .resource.channelNames,
  # optional
  defaultChannelNames:
  - print-to-stdout
  # default workers for resources in this namespace,
  # this value can be override by .resource.workers,
  # optional
  defaultWorkers: 3
  # minimum resync period for resources in this namespace, actual resync period will between 12h to 24h,
  # this value can be override by .resource.resyncPeriod,
  # optional
  minResyncPeriod: 12h
#- namespace: "demo" # another namespace with minimum configuration
#  resources:
#  - resource: "deployments"
#    noticeWhenAdded: true
#    noticeWhenDeleted: true
#    noticeWhenUpdated: true
#    updateOn:
#    - ".spec.replicas"
#- namespace: "demo" # demonstration 1: namespace="" means all namespaces
#  resources:
#  - resource: "secrets.v1."
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 2: resource name alias
#  resources:
#  - resource: "cm"
#    noticeWhenDeleted: true
#  - resource: "deploy"
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 3: short resource name
#  resources:
#  - resource: "configmaps"
#    noticeWhenDeleted: true
#  - resource: "deployments"
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 4: resource name without version
#  resources:
#  - resource: "configmaps."
#    noticeWhenDeleted: true
#  - resource: "deployments.apps"
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 5: canonical resource name
#  resources:
#  - resource: "configmaps.v1."
#    noticeWhenDeleted: true
#  - resource: "deployments.v1.apps"
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 6: callback
#  resources:
#  - resource: "configmaps"
#    noticeWhenAdded: true
#    noticeWhenDeleted: true
#    channelNames:
#    - callback-demo

# global default channels names
# this value can be override by .namespace.defaultChannelNames and .resource.channelNames
defaultChannelNames:
- print-to-stdout

# global default workers
# this value can be override by .namespace.defaultWorkers and .resource.workers
defaultWorkers: 3

# global minimum resync period, actual resync period will between 12h to 24h,
# this value can be override by .namespace.minResyncPeriod and .resource.resyncPeriod
minResyncPeriod: 12h