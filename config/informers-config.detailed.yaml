channels: # define channels
  print-to-stdout: # channel name
    type: print # channel type
    print: # configuration for type: print
      writer: stdout # writer, currently supported options: [stdout]
  callback-demo-full: # channel name
    type: callback # channel type
    callback: # configuration for type: callback
      method: POST # callback HTTP method, default to POST
      url: "http://localhost:8984/api/v1/callback-channel-test" # send notification to this url
      proxy: "http://127.0.0.1:7890" # HTTP proxy, optional
      useTemplate: true # when set to false, callback channel sends raw JSON bytes to the url, default to false
      addedTemplate: "Added: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # added message template, optional
      deletedTemplate: "Deleted: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # deleted message template, optional
      updatedTemplate: "Updated: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # updated message template, optional
  callback-demo-minimum: # channel name
    type: callback # channel type
    callback: # configuration for type: callback
      url: "http://localhost:8984/api/v1/callback-channel-test" # send notification to this url
  dingtalk-demo-full: # channel name
    type: dingtalk # channel type
    dingtalk: # configuration for type: dingtalk
      webhookURL: "https://oapi.dingtalk.com/robot/send?access_token={your_token}" # webhook url (get from bot config page)
      proxy: "http://127.0.0.1:7890" # HTTP proxy, optional
      atMobiles: # '@' users with mobile phone numbers
      - 18667006215
      atAll: true # '@' all members in group chat, when atAll=true, atMobiles will be ignored
      addedTemplate: "Added: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # added message template, optional
      deletedTemplate: "Deleted: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # deleted message template, optional
      updatedTemplate: "Updated: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # updated message template, optional
  dingtalk-demo-minimum: # channel name
    type: dingtalk # channel type
    dingtalk: # configuration for type: dingtalk
      webhookURL: "https://oapi.dingtalk.com/robot/send?access_token={your_token}" # webhook url (get from bot config page)
  flock-demo-full: # channel name
    type: flock # channel type
    flock: # configuration for type: flock
      url: "https://api.flock.com/hooks/sendMessage/{your_webhook_id}" # url get from channel config page
      proxy: "http://127.0.0.1:7890" # HTTP proxy, optional
      titleTemplate: "New Event!" # message title template, optional
      addedTemplate: "Added: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # added message template, optional
      deletedTemplate: "Deleted: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # deleted message template, optional
      updatedTemplate: "Updated: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # updated message template, optional
  flock-demo-minimum: # channel name
    type: flock # channel type
    flock: # configuration for type: flock
      url: "https://api.flock.com/hooks/sendMessage/{your_webhook_id}" # url get from channel config page
  print-demo-full: # channel name
    type: print # channel type
    print: # configuration for type: print
      writer: stdout # writer, currently supported options: [stdout]
      useTemplate: true # when set to false, print channel writes raw JSON bytes to the writer, default to false
      addedTemplate: "Added: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # added message template, optional
      deletedTemplate: "Deleted: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # deleted message template, optional
      updatedTemplate: "Updated: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # updated message template, optional
  print-demo-minimun: # channel name
    type: print # channel type
    print: # configuration for type: print
      writer: stdout # writer, currently supported options: [stdout]
  slack-demo-full: # channel name
    type: slack # channel type
    slack: # configuration for type: slack
      webhookURL: "https://hooks.slack.com/services/{your_secret}" # webhook url (get from channel config page)
      proxy: "http://127.0.0.1:7890" # HTTP proxy, optional
      titleTemplate: "New Event!" # message title template, optional
      addedTemplate: "Added: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # added message template, optional
      deletedTemplate: "Deleted: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # deleted message template, optional
      updatedTemplate: "Updated: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # updated message template, optional
  slack-demo-minimum: # channel name
    type: slack # channel type
    slack: # configuration for type: slack
      webhookURL: "https://hooks.slack.com/services/{your_secret}" # webhook url (get from channel config page)
  telegram-demo-full: # channel name
    type: telegram # channel type
    telegram: # configuration for type: telegram
      token: "{your_token}" # telegram bot token
      chatIDs: # list of chat ids
      - 648014523
      proxy: "http://127.0.0.1:7890" # HTTP proxy, optional
      addedTemplate: "Added: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # added message template, optional
      deletedTemplate: "Deleted: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # deleted message template, optional
      updatedTemplate: "Updated: {{.Obj.GroupVersionKind}}, {{.Obj.GetNamespace}}/{{.Obj.GetName}}\n" # updated message template, optional
  telegram-demo-minimum: # channel name
    type: telegram # channel type
    telegram: # configuration for type: telegram
      token: "{your_token}"
      chatIDs: # list of chat ids
      - 648014523

namespaces: # defines resources to watch
- namespace: "demo" # namespace in kubernetes, "" means all namespaces
  resources: # defines resources in this namespace
  - resource: "configmaps" # resource name in kubernetes
    noticeWhenAdded: true # record event when resource added
    noticeWhenDeleted: true # record event when resource deleted
    noticeWhenUpdated: true # record event when resource updated
    updateOn: # specify fields to watch modification
    - ".data"
    channelNames: # channel names only for this resource, optional
    - print-to-stdout
    resyncPeriod: 12h # resync period only for this resource, optional
    workers: 3 # workers only for this resource, optional
    maxRetries: 3 #  max retries for this resource, optional
  # default channels names for resources in this namespace,
  # this value can be override by .resource.channelNames,
  # optional
  defaultChannelNames:
  - print-to-stdout
  # default workers for resources in this namespace,
  # this value can be override by .resource.workers,
  # optional
  defaultWorkers: 3
  # default max retries for resource in this namespace,
  # this value can be override by .resource.maxRetries
  defaultMaxRetries: 3
  # minimum resync period for resources in this namespace, actual resync period will between 12h to 24h,
  # this value can be override by .resource.resyncPeriod,
  # optional
  minResyncPeriod: 12h
#- namespace: "demo" # another namespace with minimum configuration
#  resources:
#  - resource: "deployments"
#    noticeWhenAdded: true
#    noticeWhenDeleted: true
#    noticeWhenUpdated: true
#    updateOn:
#    - ".spec.replicas"
#- namespace: "demo" # demonstration 1: namespace="" means all namespaces
#  resources:
#  - resource: "secrets.v1."
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 2: resource name alias
#  resources:
#  - resource: "cm"
#    noticeWhenDeleted: true
#  - resource: "deploy"
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 3: short resource name
#  resources:
#  - resource: "configmaps"
#    noticeWhenDeleted: true
#  - resource: "deployments"
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 4: resource name without version
#  resources:
#  - resource: "configmaps."
#    noticeWhenDeleted: true
#  - resource: "deployments.apps"
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 5: canonical resource name
#  resources:
#  - resource: "configmaps.v1."
#    noticeWhenDeleted: true
#  - resource: "deployments.v1.apps"
#    noticeWhenDeleted: true
#- namespace: "demo" # demonstration 6: channels test
#  resources:
#  - resource: "configmaps"
#    noticeWhenAdded: true
#    noticeWhenDeleted: true
#    channelNames:
#    - callback-demo-full
#    - callback-demo-minimum
#    - dingtalk-demo-full
#    - dingtalk-demo-minimum
#    - flock-demo-full
#    - flock-demo-minimum
#    - print-demo-full
#    - print-demo-minimum
#    - slack-demo-full
#    - slack-demo-minimum
#    - telegram-demo-full
#    - telegram-demo-minimum

# global default channels names
# this value can be override by .namespace.defaultChannelNames and .resource.channelNames,
# optional
defaultChannelNames:
- print-to-stdout

# global default workers,
# this value can be override by .namespace.defaultWorkers and .resource.workers,
# optional, default to 3
defaultWorkers: 3

# global default max retries,
# this value can be override by .namespace.defaultMaxRetries and .resource.maxRetries
# optional, default to 3
defaultMaxRetries: 3

# global minimum resync period, actual resync period will between 12h to 24h,
# this value can be override by .namespace.minResyncPeriod and .resource.resyncPeriod
# optional, default to 12h
minResyncPeriod: 12h